// IMPORTS
// Use
@use '@relume-demo/styles/theming/borders' as border;
@use '@relume-demo/styles/theming/colors' as color;
@use '@relume-demo/styles/ui/sizes' as size;
@use '@relume-demo/styles/utils/mixins' as mixin;

// MIXINS
@mixin size-style-scoped( $size ) {
  @include mixin.children-styles( radio-button, ( input-element, icon ) ) {
    width: $size;
    height: $size;
  }

  @include mixin.child-styles( radio-button, icon-element ) {
    span {
      font-size: calc( #{ $size } - #{ size.rem( 2 ) } );
    }
  }

  @include mixin.child-styles( radio-button, label-element ) {
    line-height: $size;
  }
}

// STYLES
.radio-button {
  // Mixins
  @include mixin.inline-flex-center( flex-start );
  
  // Styles
  position: relative;
  
  // Children
  &__input {
    // Styles
    display: flex;
    
    // Children
    &-element {
      // Mixins
      @include mixin.transition-style( base );
      
      // Styles
      border: solid size.rem( 1 ) color.get( grey-200 );
      border-radius: border.radius( round );
      margin: 0;
      appearance: unset;
      -webkit-appearance: unset;
      cursor: pointer;
      
      // States
      @include mixin.hover-active-styles() {
        outline: none;
      }
      
      &:focus,
      &:focus-visible {
        &:not(
        :hover,
        :active
      ) {
          outline: solid size.rem( 3 ) color.get( primary-200 );
          outline-offset: 0;
        }
      }
    }
  }
  
  &__label {
    // Mixins
    @include mixin.inline-flex-center();
    
    // Styles
    margin: 0 0 0 size.rem( 8 );
    cursor: pointer;
    
    // Children
    &-element {
      pointer-events: none;
    }
  }
  
  &__icon {
    // Mixins
    @include mixin.inline-flex-center();
    @include mixin.transform( scale( .8 ) );
    @include mixin.transition-style( base );
    
    // Styles
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    pointer-events: none;
    
    // Children
    &-element {
      // Styles
      color: color.get( base-0 );
      
      // Children
      span {
        font-variation-settings: 'FILL' 1;
      }
    }
  }
  
  &__link {
    margin: 0 0 0 size.rem( 4 );
  }
  
  // Size...
  &--size {
    &-sm {
      @include size-style-scoped( size.rem( 16 ) );
    }
    
    &-md {
      @include size-style-scoped( size.rem( 20 ) );
    }
    
    &-lg {
      @include size-style-scoped( size.rem( 24 ) );
    }
  }
  
  // Is...
  &--is {
    &-checked {
      @include mixin.child-styles( radio-button, input-element ) {
        background: color.get( primary-500 );
        border-color: color.get( primary-500 );
      }

      @include mixin.child-styles( radio-button, icon ) {
        // Mixins
        @include mixin.transform( none );
        
        // Styles
        opacity: 1;
      }
    }
    
    &-disabled {
      // Styles
      pointer-events: none;
      
      // Children
      @include mixin.child-styles( radio-button, input-element ) {
        // Styles
        border-color: color.get( grey-100 );
        
        // States
        &:checked {
          background: color.get( grey-100 );
          border-color: color.get( grey-100 );
        }
      }

      @include mixin.child-styles( radio-button, label-element ) {
        color: color.get( grey-400 );
      }

      @include mixin.child-styles( radio-button, icon-element ) {
        color: color.get( grey-300 );
      }
    }
    
    &-skeleton {
      @include mixin.children-styles( radio-button, ( input, label ) ) {
        @include mixin.skeleton-loader();
      }

      @include mixin.child-styles( radio-button, label ) {
        border-radius: border.radius( md );
      }
    }
  }
}

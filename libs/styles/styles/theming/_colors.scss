// VARIABLES
$primary: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$secondary: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$support-1: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$support-2: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$support-3: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$info: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$success: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$warning: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$danger: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

// Swap the above colors variables with these colors variables to see the demo in color
// $primary: (
//   25:   #F7F6FF,
//   50:   #EFEDFF,
//   100:  #E0DAFF,
//   200:  #C0B6FF,
//   300:  #A191FF,
//   400:  #816DFF,
//   500:  #6248FF,
//   600:  #4E3ACC,
//   700:  #3B2B99,
//   800:  #271D66,
//   900:  #140E33
// );

// $secondary: (
//   25:   #FFF8F6,
//   50:   #FFF1ED,
//   100:  #FFE3DA,
//   200:  #FFC7B6,
//   300:  #FFAC91,
//   400:  #FF906D,
//   500:  #FF7448,
//   600:  #CC5D3A,
//   700:  #99462B,
//   800:  #662E1D,
//   900:  #33170E
// );

// $support-1: (
//   25:   #F6F9FD,
//   50:   #EDF3FC,
//   100:  #DAE7F9,
//   200:  #B6CEF3,
//   300:  #91B6ED,
//   400:  #6D9DE7,
//   500:  #4885E1,
//   600:  #3A6AB4,
//   700:  #2B5087,
//   800:  #1D355A,
//   900:  #0E1B2D
// );

// $support-2: (
//   25:   #F4FBF8,
//   50:   #EAF6F0,
//   100:  #D5EEE2,
//   200:  #AADDC5,
//   300:  #80CCA7,
//   400:  #55BB8A,
//   500:  #2BAA6D,
//   600:  #228857,
//   700:  #1A6641,
//   800:  #11442C,
//   900:  #092216
// );

// $support-3: (
//   25:   #FCF4FE,
//   50:   #F8E9FE,
//   100:  #F2D4FC,
//   200:  #E5A9F9,
//   300:  #D77EF7,
//   400:  #CA53F4,
//   500:  #BD28F1,
//   600:  #9720C1,
//   700:  #711891,
//   800:  #4C1060,
//   900:  #260830
// );

// $info: (
//   25:   #F6F9FD,
//   50:   #EDF3FC,
//   100:  #DAE7F9,
//   200:  #B6CEF3,
//   300:  #91B6ED,
//   400:  #6D9DE7,
//   500:  #4885E1,
//   600:  #3A6AB4,
//   700:  #2B5087,
//   800:  #1D355A,
//   900:  #0E1B2D
// );

// $success: (
//   25:   #F4FBF8,
//   50:   #EAF6F0,
//   100:  #D5EEE2,
//   200:  #AADDC5,
//   300:  #80CCA7,
//   400:  #55BB8A,
//   500:  #2BAA6D,
//   600:  #228857,
//   700:  #1A6641,
//   800:  #11442C,
//   900:  #092216
// );

// $warning: (
//   25:   #FEFAF5,
//   50:   #FDF6EB,
//   100:  #FBECD6,
//   200:  #F7DAAD,
//   300:  #F4C785,
//   400:  #F0B55C,
//   500:  #ECA233,
//   600:  #BD8229,
//   700:  #8E611F,
//   800:  #5E4114,
//   900:  #2F200A
// );

// $danger: (
//   25:   #FDF5F5,
//   50:   #FCEBEB,
//   100:  #F9D6D6,
//   200:  #F2AEAE,
//   300:  #EC8585,
//   400:  #E55D5D,
//   500:  #DF3434,
//   600:  #B22A2A,
//   700:  #861F1F,
//   800:  #591515,
//   900:  #2D0A0A
// );

$grey: (
  25:   #F8F8F9,
  50:   #F0F1F4,
  100:  #E2E4E8,
  200:  #C4C8D1,
  300:  #A7ADBA,
  400:  #8991A3,
  500:  #6C768C,
  600:  #565E70,
  700:  #414754,
  800:  #2B2F38,
  900:  #16181C
);

$base: (
  0:  #FFFFFF,
  25: #F8F8F9,
  50: #F0F1F4
);

$invert: (
  0:  #16181C,
  25: #2B2F38,
  50: #414754
);

$neutral: (
  white:        #FFFFFF,
  black:        #000000,
  transparent:  #FFFFFF00
);

$social: (
  linkedin:   #0a66c2,
  youtube:    #b2071d,
  facebook:   #4267b2,
  x:          #14171a,
  instagram:  #d62976,
  tiktok:     #ff0050,
  pinterest:  #e60023
);

$palettes: (
  'primary':      $primary,
  'secondary':    $secondary,
  'support-1':    $support-1,
  'support-2':    $support-2,
  'support-3':    $support-3,
  'info':         $info,
  'success':      $success,
  'warning':      $warning,
  'danger':       $danger,
  'grey':         $grey,
  'neutral':      $neutral,
  'base':         $base,
  'invert':       $invert,
  'social':       $social
);

// MIXINS
/**
* Generates CSS variables for solid colors
*/
@mixin create-color-variables(
  $name,
  $value
) {
  --#{ $name }: #{ $value };
}

/**
* Generates CSS variables for alpha colors
*/
@mixin create-color-variables-with-rgb(
  $name,
  $value
) {
  @include create-color-variables(
    $name,
    $value
  );
  
  --#{ $name }-r: #{ red( $value ) };
  --#{ $name }-g: #{ green( $value ) };
  --#{ $name }-b: #{ blue( $value ) };
}

/**
* Generates CSS color variables
*/
@mixin generate-color-variables( $values: $palettes ) {
  // Generate solid and alpha colors for the theme colors
  @each $prefix, $palette in $values {
    @each $color, $value in $palette {
      @include create-color-variables-with-rgb( #{ $prefix }-#{ $color }, $value );
    }
  }
}

// FUNCTIONS
/**
* Gets a color value from the variables based on the color name
*/
@function get( $name ) {
  @return var( --#{ unquote( $name ) } );
}

/**
* Genegrates an alpha color value based on a color name an color variable
*/
@function alpha(
  $name,
  $alpha
) {
  @return rgba(
    var( --#{ unquote( $name ) }-r ),
    var( --#{ unquote( $name ) }-g ),
    var( --#{ unquote( $name ) }-b ),
    $alpha
  );
}


/**
* Sets the correct social link color based on the link type
*/
@function social-color( $type ) {
  @if $type == linkedin {
    @return get( social-#{ $type } );
  } @else if $type == youtube {
    @return get( social-#{ $type } );
  } @else if $type == facebook {
    @return get( social-#{ $type } );
  } @else if $type == x {
    @return get( social-#{ $type } );
  } @else if $type == instagram {
    @return get( social-#{ $type } );
  } @else if $type == tiktok {
    @return get( social-#{ $type } );
  } @else if $type == pinterest {
    @return get( social-#{ $type } );
  } @else {
    @error 'Unknown type #{ $type }.';
  }
}
